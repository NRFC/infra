server {
    listen 80;
    server_name localhost;  # Replace with your domain or IP

    root /opt/drupal/web;  # Path to your Symfony app's public folder
    index index.php index.html index.htm;

    # Redirect all HTTP traffic to HTTPS (optional if you have SSL)
    # Uncomment if you have SSL configured
    # listen 80;
    # return 301 https://$server_name$request_uri;

    location / {
        try_files $uri $uri/ /index.php$is_args$args;
    }

    # PHP-FPM configuration for Symfony
    location ~ \.php$ {
        fastcgi_pass http://drupal:9000;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        internal;
    }

    # Block access to sensitive directories
    location ~ ^/(var|vendor|config|readme|composer\.(json|lock)|phpunit\.xml|\.env.*|\.git) {
        deny all;
    }

    # Block access to .htaccess files
    location ~ /\.ht {
        deny all;
    }

    # Reverse proxy configuration for API or other services (optional)
    # location /api/ {
    #     proxy_pass http://backend-api;  # Example for backend API
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    # }

    # Logging to stdout and stderr
    access_log /dev/stdout;
    error_log  /dev/stderr;
}

# HTTPS configuration (optional)
# server {
#     listen 443 ssl;
#     server_name yourdomain.com;
#
#     ssl_certificate /etc/nginx/ssl/yourdomain.com.crt;
#     ssl_certificate_key /etc/nginx/ssl/yourdomain.com.key;
#
#     include snippets/symfony.conf;
# }

# server {
# server_name mysite.com;
#
# root /var/www/mysite; #document root for your site
# access_log off; #for production environment; for testing you can enable it
#
# location ~* \.(htm|html)$ {
# error_page    404 = @imagecache;
# proxy_cache_valid  200 302  10m;
# proxy_cache_valid  404  1m;
# access_log off;
# expires 2m;
# }
#
# # serve static files directly
# location ~* \.(gif|jpg|jpeg|png|wmv|avi|mpg|mpeg|mp4|js|css|mp3|swf|ico|flv|htm)$ {
# error_page    404 = @imagecache;
# proxy_cache_valid  200 302  10m;
# proxy_cache_valid  404  1m;
# access_log off;
# expires 30d;
# }
#
# # ImageCache work arounds
# location ~ ^/sites/.*/files/imagecache/ {
# try_files $uri @rewrite;
# }
#
# location @imagecache {
# client_max_body_size    50m;
# client_body_buffer_size 128k;
# proxy_send_timeout   90;
# proxy_read_timeout   90;
# proxy_buffer_size    4k;
# proxy_buffers     16 32k;
# proxy_busy_buffers_size 64k;
# proxy_temp_file_write_size 64k;
# proxy_connect_timeout 30s;
#
# #in case image cache is not generated yet (drupal is generating them on first access, send request to apache
#
# proxy_redirect  http://mysite.com:81   http://mysite.com;
# proxy_pass   http://localhost:81;
# proxy_set_header   Host   $host;
# proxy_set_header   X-Real-IP  $remote_addr;
# proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
# }
# location ~ /\.ht {
# deny  all;
# }
#
# location / {
# client_max_body_size    1000m;
# client_body_buffer_size 128k;
# proxy_send_timeout   90;
# proxy_read_timeout   90;
# proxy_buffer_size    4k;
# proxy_buffers     16 32k;
# proxy_busy_buffers_size 64k;
# proxy_temp_file_write_size 64k;
# proxy_connect_timeout 30s;
# proxy_redirect  http://mysite.com:81   http://mysite.com;
# proxy_pass   http://localhost:81/;
# proxy_set_header   Host   $host;
# proxy_set_header   X-Real-IP  $remote_addr;
# proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
# }
# #this file should exist on your disk, it will be shown in case apache is overloaded and nginx is not able to ping it
# error_page 403 /misc/mysiteovercapacity.htm;
# error_page 502 /misc/mysiteovercapacity.htm;
# error_page 503 /misc/mysiteovercapacity.htm;
# error_page 504 /misc/mysiteovercapacity.htm;
# }